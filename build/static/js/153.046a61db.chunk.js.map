{"version":3,"sources":["views/product/ProductsData.js","views/product/Products.js"],"names":["ProductsData","id","name","category","sub_category","created_at","Products","history","useHistory","queryPage","useLocation","search","match","currentPage","Number","useState","page","setPage","jwtToken","sessionStorage","getItem","useEffect","axios","get","headers","then","response","console","log","data","catch","error","getBadge","status","xl","className","style","float","to","items","productsData","fields","key","_classes","hover","striped","itemsPerPage","activePage","clickableRows","scopedSlots","item","color","onActivePageChange","newPage","push","pages","doubleArrows","align"],"mappings":"yKAeeA,EAfM,CACnB,CAAEC,GAAI,EAAGC,KAAM,SAAUC,SAAU,aAAcC,aAAc,eAAgBC,WAAY,cAC3F,CAACJ,GAAI,EAAGC,KAAM,wBAAyBC,SAAU,uBAAwBC,aAAc,eAAgBC,WAAY,cACnH,CAACJ,GAAI,EAAGC,KAAM,wBAAyBC,SAAU,uBAAwBC,aAAc,eAAgBC,WAAY,cACnH,CAACJ,GAAI,EAAGC,KAAM,wBAAyBC,SAAU,uBAAwBC,aAAc,eAAgBC,WAAY,cACnH,CAACJ,GAAI,EAAGC,KAAM,mBAAoBC,SAAU,qBAAsBC,aAAc,eAAeC,WAAY,cAC3G,CAACJ,GAAI,EAAGC,KAAM,cAAeC,SAAU,qBAAsBC,aAAc,eAAeC,WAAY,cACtG,CAACJ,GAAI,EAAGC,KAAM,cAAeC,SAAU,qBAAsBC,aAAc,eAAeC,WAAY,cACtG,CAACJ,GAAI,EAAGC,KAAM,wBAAyBC,SAAU,oBAAqBC,aAAc,eAAiBC,WAAY,cACjH,CAACJ,GAAI,EAAGC,KAAM,wBAAyBC,SAAU,oBAAqBC,aAAc,eAAiBC,WAAY,cACjH,CAACJ,GAAI,EAAGC,KAAM,wBAAyBC,SAAU,oBAAqBC,aAAc,eAAiBC,WAAY,cACjH,CAACJ,GAAI,GAAIC,KAAM,sBAAwBC,SAAU,oBAAqBC,aAAc,eAAgBC,WAAY,e,QCqGnGC,UA5FE,WACb,IAAMC,EAAUC,cACVC,EAAYC,cAAcC,OAAOC,MAAM,gBAAiB,IACxDC,EAAcC,OAAOL,GAAaA,EAAU,GAAKA,EAAU,GAAK,GACtE,EAAwBM,mBAASF,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,IAAzC,mBAEMG,GAFN,UAEiBC,eAAeC,QAAQ,UAsBxCC,qBAAU,WAdNC,IAAMC,IAAI,wCAAyC,CAC/CC,QAAS,CACL,aAAcN,KAGjBO,MAAK,SAAUC,GACZC,QAAQC,IAAIF,EAASG,SAGxBC,OAAM,SAAUC,GAEbJ,QAAQC,IAAIG,MAKpBlB,IAAgBG,GAAQC,EAAQJ,KACjC,CAACA,EAAaG,IAEjB,IAAMgB,EAAW,SAAAC,GACb,OAAQA,GACJ,IAAK,SAAU,MAAO,UACtB,IAAK,WAAY,MAAO,YACxB,IAAK,UAAW,MAAO,UACvB,IAAK,SAAU,MAAO,SACtB,QAAS,MAAO,YAGxB,OACI,cAAC,KAAD,UACI,cAAC,IAAD,CAAMC,GAAI,GAAV,SACI,eAAC,IAAD,WACI,eAAC,IAAD,sBAEI,cAAC,KAAD,CAAOC,UAAU,kBAAkBC,MAAO,CAAEC,MAAO,SAAWC,GAAG,eAAjE,4BAKJ,eAAC,IAAD,WACI,cAAC,IAAD,CACIC,MAAOC,EACPC,OAAQ,CACJ,CAAEC,IAAK,OAAQC,SAAU,oBACzB,WAAY,eAAgB,cAEhCC,OAAK,EACLC,SAAO,EACPC,aAAc,EACdC,WAAY/B,EACZgC,eAAa,EAEbC,YAAa,CACT,OACI,SAACC,GAAD,OACI,6BACI,cAAC,IAAD,CAAQC,MAAOnB,EAASkB,EAAKjB,QAA7B,SACKiB,EAAKjB,eAM9B,cAAC,KAAD,CACIc,WAAY/B,EACZoC,mBAtEL,SAAAC,GACfxC,IAAgBwC,GAAW9C,EAAQ+C,KAAR,yBAA+BD,KAsEtCE,MAAO,EACPC,cAAc,EACdC,MAAM","file":"static/js/153.046a61db.chunk.js","sourcesContent":["const ProductsData = [\r\n  { id: 0, name: 'lorem2', category: 'sdfsdfdsfd', sub_category: 'sdfsdfdvxced', created_at: '2018/01/01'},\r\n  {id: 1, name: 'Lorem Ipsum is simply', category: 'scrambled it to make', sub_category: 'sdfsdfdvxced', created_at: '2018/01/01'},\r\n  {id: 2, name: 'Lorem Ipsum is simply', category: 'scrambled it to make', sub_category: 'sdfsdfdvxced', created_at: '2018/02/01'},\r\n  {id: 3, name: 'Lorem Ipsum is simply', category: 'scrambled it to make', sub_category: 'sdfsdfdvxced', created_at: '2018/02/01'},\r\n  {id: 4, name: 'Derick Maximinus', category: 'default model text', sub_category: 'sdfsdfdvxced',created_at: '2018/03/01'},\r\n  {id: 5, name: '1500s, when', category: 'default model text', sub_category: 'sdfsdfdvxced',created_at: '2018/01/21'},\r\n  {id: 6, name: '1500s, when', category: 'default model text', sub_category: 'sdfsdfdvxced',created_at: '2018/01/01'},\r\n  {id: 7, name: 'essentially unchanged', category: 'sdfsd dfsdf dfjks', sub_category: 'sdfsdfdvxced',  created_at: '2018/02/01'},\r\n  {id: 8, name: 'essentially unchanged', category: 'sdfsd dfsdf dfjks', sub_category: 'sdfsdfdvxced',  created_at: '2018/02/01'},\r\n  {id: 9, name: 'essentially unchanged', category: 'sdfsd dfsdf dfjks', sub_category: 'sdfsdfdvxced',  created_at: '2018/03/01'},\r\n  {id: 10, name: 'PageMaker including',  category: 'sdfsd dfsdf dfjks', sub_category: 'sdfsdfdvxced', created_at: '2018/01/21'}\r\n  \r\n]\r\n\r\nexport default ProductsData\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n    CBadge,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CDataTable,\r\n    CRow,\r\n    CPagination,\r\n    CLink\r\n} from '@coreui/react'\r\nimport axios from 'axios'\r\n\r\n// import usersData from '../users/UsersData'\r\nimport productsData from './ProductsData'\r\n\r\n\r\n\r\nconst Products = () => {\r\n    const history = useHistory()\r\n    const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n    const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\r\n    const [page, setPage] = useState(currentPage)\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const jwtToken = sessionStorage.getItem(\"token\");\r\n\r\n\r\n    const pageChange = newPage => {\r\n        currentPage !== newPage && history.push(`/products?page=${newPage}`)\r\n    }\r\n\r\n    const axiosProducts = () => {\r\n        axios.get('http://markbran.in/apis/admin/product', {\r\n            headers: {\r\n                \"auth-token\": jwtToken //the token is a variable which holds the token\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                // setProducts(response.data.categories);\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        axiosProducts();\r\n        currentPage !== page && setPage(currentPage)\r\n    }, [currentPage, page])\r\n\r\n    const getBadge = status => {\r\n        switch (status) {\r\n            case 'Active': return 'success'\r\n            case 'Inactive': return 'secondary'\r\n            case 'Pending': return 'warning'\r\n            case 'Banned': return 'danger'\r\n            default: return 'primary'\r\n        }\r\n    }\r\n    return (\r\n        <CRow>\r\n            <CCol xl={12}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                        Products\r\n                        <CLink className=\"btn btn-success\" style={{ float: 'right' }} to=\"/add-product\">\r\n                            Add Product\r\n                        </CLink>\r\n                      {/* <small  className=\"text-muted\"> example</small> */}\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                        <CDataTable\r\n                            items={productsData}\r\n                            fields={[\r\n                                { key: 'name', _classes: 'font-weight-bold' },\r\n                                'category', 'sub_category', 'created_at'\r\n                            ]}\r\n                            hover\r\n                            striped\r\n                            itemsPerPage={5}\r\n                            activePage={page}\r\n                            clickableRows\r\n                            // onRowClick={(item) => history.push(`/users/${item.id}`)}\r\n                            scopedSlots={{\r\n                                'status':\r\n                                    (item) => (\r\n                                        <td>\r\n                                            <CBadge color={getBadge(item.status)}>\r\n                                                {item.status}\r\n                                            </CBadge>\r\n                                        </td>\r\n                                    )\r\n                            }}\r\n                        />\r\n                        <CPagination\r\n                            activePage={page}\r\n                            onActivePageChange={pageChange}\r\n                            pages={2}\r\n                            doubleArrows={false}\r\n                            align=\"center\"\r\n                        />\r\n                    </CCardBody>\r\n                </CCard>\r\n            </CCol>\r\n        </CRow>\r\n    )\r\n}\r\n\r\nexport default Products"],"sourceRoot":""}